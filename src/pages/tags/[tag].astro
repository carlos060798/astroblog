---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
// en rutamiento dinamico mediante params
// en rutamiento dinamico mediante  getStaticPaths => por cada elemento del array se genera una ruta

export async function getStaticPaths() {
  // const allPosts = await Astro.glob("../posts/*.md"); => SE REFERENCIA TODOS LOS ELEMETOS DE POST EN LAS ETIQUETAS
  // PARA QUE MEDIANTE LA RUTA DLE GET PAG DE TAG SE REFERENCIA EL POST QUE TENGA COMO ETIQUETA EL PARAMETRO DE LA RUTA

  const allPosts = await Astro.glob("../posts/*.md");
  /*
  Recorre cada entrada Markdown, una a una, y combina cada array de etiquetas en un único array más grande. A continuación,
crea un nuevo Set a partir de todas las etiquetas individuales que ha encontrado (para ignorar los valores repetidos).
 Finalmente, convierte ese conjunto en un array (sin duplicaciones),
   que puedes usar para mostrar una lista de etiquetas en tu página.
  */
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  /* forma estatica de crear la relacion d eetiquetas y post
  return [
    { params: { tag: "astro" }, props: { posts: allPosts } },
    { params: { tag: "éxitos" }, props: { posts: allPosts } },
    { params: { tag: "comunidad" }, props: { posts: allPosts } },
    { params: { tag: "bloguear" }, props: { posts: allPosts } },
    { params: { tag: "contratiempos" }, props: { posts: allPosts } },
    { params: { tag: "aprender en público" }, props: { posts: allPosts } },
  ];*/

  //forma dinamica
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// forma de filtrado estatico aplicable al primer return ==> const filteredPosts = posts.filter((post) 

---

<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {/* forma estatica de filtrado
      {
      filteredPosts.map((post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
      */}
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}

  </ul>
</BaseLayout>
